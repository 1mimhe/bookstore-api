{
    "openapi": "3.0.1",
    "info": {
        "title": "Bookstore-Api",
        "description": "Bookstore-App Api documentation.",
        "version": "1.0.0"
    },
    "paths": {
        "/auth/registration": {
            "post": {
                "summary": "Create a new user.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationUser"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully."
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login user.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUser"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User login successfully."
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "summary": "Refresh access token.",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "201": {
                        "description": "Access Token refreshed successfully."
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "Logout user.",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully."
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "summary": "Get current user details.",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                }
            }
        },
        "/users/addAddress": {
            "post": {
                "summary": "Add a new address for the user.",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddUserAddress"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddUserAddress"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address added successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/edit": {
            "patch": {
                "summary": "Edit a user.",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EditUser"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully."
                    }
                }
            }
        },
        "/languages": {
            "post": {
                "summary": "Add a new language.",
                "tags": [
                    "Language"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddLanguage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddLanguage"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Language added successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            },
            "get": {
                "summary": "Get all languages.",
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Languages retrieved successfully."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/books/titles": {
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Add a new title",
                "description": "Creates a new title in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTitle"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTitle"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Title created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/books/titles/paginated/{limit}/{offset}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get paginated titles",
                "description": "Returns a list of titles with pagination",
                "parameters": [
                    {
                        "required": true,
                        "name": "limit",
                        "in": "path",
                        "description": "Maximum number of records to return",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "required": true,
                        "name": "offset",
                        "in": "path",
                        "description": "Number of records to skip",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/books/titles/{id}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get title by ID",
                "description": "Returns a single title by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of title to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Title not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Book"
                ],
                "summary": "Update an existing title",
                "description": "Updates a title by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of title to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EditTitle"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditTitle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Title updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Title not found"
                    }
                }
            }
        },
        "/books": {
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Add a new book",
                "description": "Creates a new book with the provided information and optional book images",
                "requestBody": {
                    "description": "Book object to be added with optional book images",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddBook"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddBook"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/books/{id}": {
            "patch": {
                "tags": [
                    "Book"
                ],
                "summary": "Edit a book",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the book",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Book object to be added",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EditBook"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditBook"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book edited successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Book"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the book",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book deleted successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/books/titles/by-id/{id}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get complete title by ID",
                "description": "Retrieves complete title information by its unique identifier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique identifier of the title",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Title not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/books/titles/{slug}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get complete title by slug",
                "description": "Retrieves complete title information by its unique identifier",
                "operationId": "getTitleById",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Unique slug identifier of the title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Title not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/profiles": {
            "post": {
                "summary": "Create a new profile (author/translator)",
                "tags": [
                    "Profile"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddProfile"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Profile created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/publishers": {
            "post": {
                "summary": "Add a new publisher",
                "description": "Creates a new publisher with name, slug, and optional description.",
                "tags": [
                    "Publisher"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPublisher"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPublisher"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Publisher created successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationUser": {
                "type": "object",
                "required": [
                    "username",
                    "firstName",
                    "password",
                    "gender"
                ],
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ]
                    }
                }
            },
            "LoginUser": {
                "type": "object",
                "required": [
                    "identifier",
                    "password"
                ],
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "AddUserAddress": {
                "type": "object",
                "required": [
                    "recipientName",
                    "province",
                    "city",
                    "postalAddress"
                ],
                "properties": {
                    "recipientName": {
                        "type": "string",
                        "minLength": 4
                    },
                    "country": {
                        "type": "string",
                        "example": "Iran"
                    },
                    "province": {
                        "type": "string",
                        "minLength": 2
                    },
                    "city": {
                        "type": "string",
                        "minLength": 2
                    },
                    "postalAddress": {
                        "type": "string",
                        "minLength": 5
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    }
                }
            },
            "EditUser": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "AddLanguage": {
                "type": "object",
                "required": [
                    "language"
                ],
                "properties": {
                    "language": {
                        "type": "string",
                        "description": "Language name",
                        "example": "English"
                    }
                }
            },
            "AddTitle": {
                "type": "object",
                "required": [
                    "name",
                    "authorIds"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Title name"
                    },
                    "slug": {
                        "type": "string",
                        "description": "URL-friendly identifier"
                    },
                    "authorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    "summary": {
                        "type": "string",
                        "description": "Brief summary of the title"
                    },
                    "originallyPublishedAt": {
                        "type": "string",
                        "format": "date",
                        "description": "Original publication date"
                    }
                }
            },
            "EditTitle": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Title name"
                    },
                    "slug": {
                        "type": "string",
                        "description": "URL-friendly identifier"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Brief summary of the title"
                    },
                    "originallyPublishedAt": {
                        "type": "string",
                        "format": "date",
                        "description": "Original publication date"
                    }
                }
            },
            "AddBook": {
                "type": "object",
                "required": [
                    "name",
                    "titleId",
                    "publisherId",
                    "authorIds"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the book"
                    },
                    "anotherName": {
                        "type": "string",
                        "description": "Alternative name for the book"
                    },
                    "titleId": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "ID of the book title"
                    },
                    "publisherId": {
                        "type": "integer",
                        "description": "ID of the book publisher"
                    },
                    "translatorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    "languageId": {
                        "type": "integer",
                        "description": "ID of the book language"
                    },
                    "ISBN": {
                        "type": "string",
                        "description": "International Standard Book Number"
                    },
                    "quarto": {
                        "type": "string",
                        "enum": [
                            "vaziri",
                            "roqee",
                            "jibi",
                            "rahli",
                            "kheshti",
                            "paltoyi",
                            "sultani"
                        ],
                        "description": "Book size format"
                    },
                    "cover": {
                        "type": "string",
                        "enum": [
                            "shoomiz",
                            "kaqazi",
                            "sakht",
                            "charmi"
                        ],
                        "description": "Type of book cover"
                    },
                    "pagesNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Number of pages in the book"
                    },
                    "publishedAt": {
                        "type": "string",
                        "format": "date",
                        "description": "Publication date of the book (YYYY-MM-DD)"
                    },
                    "publishSeries": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Publication series number"
                    },
                    "weight": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Weight of the book"
                    },
                    "stock": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Number of books in stock"
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Price of the book"
                    },
                    "bookImages": {
                        "type": "array",
                        "description": "Book images collection",
                        "items": {
                            "$ref": "#/components/schemas/BookImage"
                        },
                        "example": [
                            {
                                "type": "main",
                                "url": "https://example.com/book-main.jpg"
                            },
                            {
                                "type": "cover",
                                "url": "https://example.com/book-cover.jpg"
                            }
                        ]
                    }
                }
            },
            "BookImage": {
                "type": "object",
                "required": [
                    "type",
                    "url"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of book image",
                        "enum": [
                            "main",
                            "back",
                            "inside",
                            "cover"
                        ],
                        "example": "main"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL of the image",
                        "example": "https://example.com/book-main.jpg"
                    }
                }
            },
            "EditBook": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the book"
                    },
                    "anotherName": {
                        "type": "string",
                        "description": "Alternative name for the book"
                    },
                    "languageId": {
                        "type": "integer",
                        "description": "ID of the book language"
                    },
                    "ISBN": {
                        "type": "string",
                        "description": "International Standard Book Number"
                    },
                    "quarto": {
                        "type": "string",
                        "enum": [
                            "vaziri",
                            "roqee",
                            "jibi",
                            "rahli",
                            "kheshti",
                            "paltoyi",
                            "sultani"
                        ],
                        "description": "Book size format"
                    },
                    "cover": {
                        "type": "string",
                        "enum": [
                            "shoomiz",
                            "kaqazi",
                            "sakht",
                            "charmi"
                        ],
                        "description": "Type of book cover"
                    },
                    "pagesNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Number of pages in the book"
                    },
                    "publishedAt": {
                        "type": "string",
                        "format": "date",
                        "description": "Publication date of the book (YYYY-MM-DD)"
                    },
                    "publishSeries": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Publication series number"
                    },
                    "weight": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Weight of the book"
                    },
                    "stock": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Number of books in stock"
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Price of the book"
                    }
                }
            },
            "AddProfile": {
                "type": "object",
                "required": [
                    "firstName"
                ],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "biography": {
                        "type": "string",
                        "maxLength": 5000
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "format": "date",
                        "example": "1985-04-15"
                    },
                    "dateOfDeath": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-01-01"
                    }
                }
            },
            "AddPublisher": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Penguin Books"
                    },
                    "slug": {
                        "type": "string",
                        "example": "penguin-books"
                    },
                    "description": {
                        "type": "string",
                        "example": "A famous book publishing company."
                    }
                },
                "required": [
                    "name"
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}